name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  release-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Release
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: go

      - name: Docker meta
        if: ${{ steps.release.outputs.release_created }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set up QEMU
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build runtime image
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          target: runtime
          tags: |
            ghcr.io/${{ github.repository }}:commit-${{ github.sha }}
            ghcr.io/${{ github.repository }}:v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
            ghcr.io/${{ github.repository }}:v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
            ghcr.io/${{ github.repository }}:v${{ steps.release.outputs.major }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Retrieve static binaries
        if: ${{ steps.release.outputs.release_created }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.release.outputs.tag_name }}
        run: |
          mkdir dist
          for platform in linux/amd64 linux/arm64; do
            platform_safe=${platform//\//_}

            echo "[*] Getting mtlsocks5 for $platform"
            docker create --name tmp-${platform_safe} --platform $platform ghcr.io/${{ github.repository }}:commit-${{ github.sha }}
            docker cp tmp-${platform_safe}:/mtlsocks5 mtlsocks5_${tag_name}_${platform_safe}
            docker rm tmp-${platform_safe}

            echo "[*] Compressing mtlsocks5 for $platform"
            tar -czvf mtlsocks5_${tag_name}_${platform_safe}.tar.gz mtlsocks5_${tag_name}_${platform_safe}

            echo "[*] Uploading mtlsocks5 for $platform"
            gh release upload $tag_name mtlsocks5_${tag_name}_${platform_safe}
            gh release upload $tag_name mtlsocks5_${tag_name}_${platform_safe}.tar.gz
          done
